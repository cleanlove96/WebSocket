<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="BaseResultMapRoleName"
		type="com.pojo.UserRoleName">
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="role_name" property="roleName"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, password, role_id
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.model.User">
		insert into user (id,
		user_name, password,
		role_id)
		values (#{id,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{roleId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.model.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.model.User">
		update user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		role_id = #{roleId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryAllUser" resultMap="BaseResultMap">
		select
		*
		from user

	</select>
	<select id="getAllUserName" resultMap="BaseResultMapRoleName">
		SELECT
		role.role_name,
		`user`.`password`,
		`user`.user_name
		FROM
		role
		INNER JOIN user_role ON
		role.role_id = user_role.role_id
		INNER JOIN `user` ON `user`.id =
		user_role.id AND `user`.role_id =
		role.role_id

	</select>
	<select id="selectByUserName" resultMap="BaseResultMap"
		parameterType="com.model.User">
		select
		*
		from user
		where
		user_name=#{userName,jdbcType=VARCHAR}

	</select>
</mapper>